/*
В данной задаче предоставляется код из предыдущей работы, его нужно доработать согласно требованиям постановки задачи. Метод решения, алгоритм и блок-схему нужно 
составить только для того, что было добавлено/изменено в данной задаче, повторно описывать предыдущую не нужно.
Задача

Формирование и работа с иерархией объектов программы-системы.

Создание объектов и построение исходного иерархического дерева объектов.
Система собирается из объектов, принадлежащих определенным классам. В тексте постановки задачи классу соответствует уникальный номер. Относительно номера класса
определяются требования (свойства, функциональность).
Первоначальная сборка системы (дерева иерархии объектов, программы) осуществляется исходя из входных данных. Данные вводятся построчно.
Первая строка содержит имя корневого объекта (объект приложение). Номер класса корневого объекта 1. Корневой объект объявляется в основной программе (main). 
Далее, каждая строка входных данных определяет очередной объект, задает его характеристики и расположение на дереве иерархии. Структура данных в строке:
«Наименование головного объекта» «Наименование очередного объекта» «Номер класса принадлежности очередного объекта»
Ввод иерархического дерева завершается, если наименование головного объекта равно «endtree» (в данной строке ввода больше ничего не указывается).

Вывод иерархического дерева объектов на консоль
Внутренняя архитектура (вид иерархического дерева объектов) в большинстве реализованных программах динамически меняется в процессе отработки алгоритма. 
Вывод текущего дерева объектов является важной задачей, существенно помогая разработчику, особенно на этапе тестирования и отладки программы. 

В данной задаче подразумевается, что наименования объектов уникальны.
Система содержит объекты пяти классов, не считая корневого. Номера классов: 2,3,4,5,6.  

Расширить функциональность базового класса:
 - метод поиска объекта на дереве иерархии по имени (метод возвращает указатель на найденный объект или nullptr);
 - метод вывода дерева иерархии объектов;
 - метод вывода дерева иерархии объектов и отметок их готовности;
 - метод установки готовности объекта реализовать (доработать) следующим образом.


Готовность для каждого объекта устанавливается индивидуально. Готовность задается посредством любого отличного от нуля целого числового значения, которое
присваивается свойству состояния объекта. Объект переводится в состояние готовности, если все объекты вверх по иерархии до корневого включены, иначе установка 
готовности игнорируется.
При отключении головного, отключаются все объекты от него по иерархии вниз по ветке. Свойству состояния объекта присваивается значение нуль.


 


Разработать программу:
1. Построить дерево объектов системы (в методе коневого объекта построения исходного дерева объектов). 
2. В методе корневого объекта запуска моделируемой системы реализовать:
2.1. Вывод на консоль иерархического дерева объектов в следующем виде: 
root
    ob_1
        ob_2
    ob_3
        ob_4
            ob_5
        ob_6
            ob_7

где: root - наименование корневого объекта (приложения). 

2.2. Переключение готовности объектов согласно входным данным (командам).
2.3. Вывод на консоль иерархического дерева объектов и отметок их готовности в следующем виде: 
root  is ready
    ob_1  is ready
        ob_2  is ready
    ob_3  is ready
        ob_4 is not ready
            ob_5 is not ready
        ob_6 is ready
            ob_7 is not ready


 

При решении задачи необходимо руководствоваться методическим пособием и приложением к методическому пособию

Входные данные
Множество объектов, их характеристики и расположение на дереве иерархии.
Последовательность ввода организовано так, что головной объект для очередного вводимого объекта уже присутствует на дереве иерархии объектов.
Первая строка
Наименование корневого объекта
Со второй строки
Наименование головного объекта Наименование очередного объекта Номер класса принадлежности очередного объекта
. . . . .
endtree

Со следующей строки вводятся команды включения или отключения объектов
Наименование объекта Номер состояния объекта
. . . . .


Признаком завершения ввода является конец потока входных данных.


Пример ввода

app_root
app_root object_01 3
app_root object_02 2
object_02 object_04 3
object_02 object_05 5
object_01 object_07 2
endtree
app_root 1
object_07 3
object_01 1
object_02 -2
object_04 1

Выходные данные
Вывести иерархию объектов в следующем виде:
Object tree
Наименование корневого объекта
    Наименование объекта 1
        Наименование объекта 2
    Наименование объекта 3
. . . . . 
The tree of objects and their readiness
Наименование корневого объекта Отметка готовности
    Наименование объекта 1 Отметка готовности
        Наименование объекта 2 Отметка готовности
    Наименование объекта 3 Отметка готовности
. . . . . 

Отметка готовности - равно is ready или is not ready
Отступ каждого уровня иерархии 4 позиции.

Пример вывода

Object tree
app_root
    object_01
        object_07
    object_02
        object_04
        object_05
The tree of objects and their readiness
app_root is ready
    object_01 is ready
        object_07 is not ready
    object_02 is ready
        object_04 is ready
        object_05 is not ready
*/
